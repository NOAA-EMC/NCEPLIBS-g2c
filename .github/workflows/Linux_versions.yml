name: Linux_versions
on:
  push:
    branches:
    - develop
  pull_request:
    branches:
    - develop

jobs:
  Linux_versions:
    runs-on: ubuntu-latest
    env:
      CC: gcc
      CXX: g++
    strategy:
      fail-fast: true
      matrix:
        jasper-version: [2.0.33, 3.0.3, 4.0.0]
        ccompiler: [clang, gcc]
    
    steps:
    - name: install-dependencies
      run: |
        sudo apt-get update
        sudo apt-get install libpng-dev zlib1g-dev libjpeg-dev libopenjp2-7-dev
        if [[ ${{ matrix.ccompiler }} == "clang" ]]; then
          sudo apt-get install clang
        fi

    - name: cache-jasper
      id: cache-jasper
      uses: actions/cache@v3
      with:
        path: ~/jasper
        key: jasper-${{ runner.os }}-${{ matrix.jasper-version }}

    - name: checkout-jasper
      if: steps.cache-jasper.outputs.cache-hit != 'true'
      uses: actions/checkout@v3
      with:
        repository: jasper-software/jasper
        path: jasper
        ref: version-${{ matrix.jasper-version }}

    - name: build-jasper
      if: steps.cache-jasper.outputs.cache-hit != 'true'
      run: |
        if [[ ${{ matrix.ccompiler }} == "clang" ]]; then
          export CC=clang
        elif [[ ${{ matrix.ccompiler }} == "gcc" ]]; then
          export CC=gcc
        fi
        cd jasper
        mkdir cmake_build
        cd cmake_build
        cmake .. -DCMAKE_INSTALL_PREFIX=~/jasper
        make -j2
        make install

    - name: checkout
      uses: actions/checkout@v3
      with:
        path: g2c

    - name: build
      run: |
        if [[ ${{ matrix.ccompiler }} == "clang" ]]; then
          export CC=clang
        elif [[ ${{ matrix.ccompiler }} == "gcc" ]]; then
          export CC=gcc
        fi
        cd g2c
        mkdir build
        cd build
        cmake -DJasper_ROOT=~/jasper -DENABLE_OpenJPEG=ON .. 
        make -j2 VERBOSE=1

    - name: test
      run: |
        set -e          
        cd $GITHUB_WORKSPACE/g2c/build
        ctest --verbose --output-on-failure --rerun-failed

